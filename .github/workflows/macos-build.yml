name: Build and Release macOS

on:
  workflow_dispatch:
  push:
    paths:
      - 'Scripts/**'
      - 'HyprUpld.png'
      - 'compile.sh'
      - 'install_scripts.sh'
      - 'compile_macos.sh'
      - 'install_scripts_macos.sh'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for changelog generation

      - name: Install Dependencies
        run: |
          brew install imagemagick zip jq

      - name: Set Executable Permissions
        run: |
          chmod +x compile_macos.sh install_scripts_macos.sh install_macos.sh

      - name: Build macOS Package
        run: ./compile_macos.sh

      - name: Set Permissions for Generated Files
        run: |
          chmod +x Scripts/*.sh

      - name: Package Release Artifacts
        run: |
          mkdir -p release_package/Scripts
          cp install_scripts_macos.sh release_package/
          cp install_macos.sh release_package/
          cp -r Scripts/ release_package/
          cd release_package
          zip -r ../hypr_installer_macos.zip .

      - name: Get Version
        id: version
        run: |
          CURRENT_VERSION=$(cat version.txt)
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo $NEW_VERSION > version.txt
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add version.txt
          git commit -m "Bump version to $NEW_VERSION"
          git push

      - name: Generate Changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 --always HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "changelog=Initial release" >> $GITHUB_OUTPUT
          else
            CHANGES=$(git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi



      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}-MacOS
          release_name: Release v${{ steps.version.outputs.version }} (macOS)
          body: |
            ${{ steps.changelog.outputs.changelog }}

            ### Included in this release:
            - Individual script files (Scripts directory)
            - Complete installation package (hypr_installer_macos.zip)
          draft: false
          prerelease: false

      - name: Upload Assets
        run: |
          # Upload Scripts
          for script in Scripts/*.sh; do
            SCRIPT_NAME=$(basename "$script")
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: text/x-shellscript" \
              --data-binary @"$script" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$SCRIPT_NAME"
          done

          # Upload installer package
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"hypr_installer_macos.zip" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=hypr_installer_macos.zip"